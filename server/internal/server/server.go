// Code generated by gogs. DO NOT EDIT.
package server

import (
	"context"

	"github.com/szpnygo/gtc/server/internal/logic/gtcserver"
	"github.com/szpnygo/gtc/server/model"

	"github.com/metagogs/gogs/session"
	"github.com/szpnygo/gtc/server/internal/svc"
)

type Server struct {
	svcCtx *svc.ServiceContext
}

func NewServer(svcCtx *svc.ServiceContext) *Server {
	return &Server{
		svcCtx: svcCtx,
	}
}

func (gogs *Server) Offer(ctx context.Context, s *session.Session, in *model.Offer) {
	l := gtcserver.NewOfferLogic(ctx, gogs.svcCtx, s)
	l.Handler(in)
}

func (gogs *Server) Answer(ctx context.Context, s *session.Session, in *model.Answer) {
	l := gtcserver.NewAnswerLogic(ctx, gogs.svcCtx, s)
	l.Handler(in)
}

func (gogs *Server) Candidate(ctx context.Context, s *session.Session, in *model.Candidate) {
	l := gtcserver.NewCandidateLogic(ctx, gogs.svcCtx, s)
	l.Handler(in)
}

func (gogs *Server) ListRoom(ctx context.Context, s *session.Session, in *model.ListRoom) {
	l := gtcserver.NewListRoomLogic(ctx, gogs.svcCtx, s)
	l.Handler(in)
}

func (gogs *Server) JoinRoom(ctx context.Context, s *session.Session, in *model.JoinRoom) {
	l := gtcserver.NewJoinRoomLogic(ctx, gogs.svcCtx, s)
	l.Handler(in)
}

func (gogs *Server) LeaveRoom(ctx context.Context, s *session.Session, in *model.LeaveRoom) {
	l := gtcserver.NewLeaveRoomLogic(ctx, gogs.svcCtx, s)
	l.Handler(in)
}

func (gogs *Server) ListRoomUsers(ctx context.Context, s *session.Session, in *model.ListRoomUsers) {
	l := gtcserver.NewListRoomUsersLogic(ctx, gogs.svcCtx, s)
	l.Handler(in)
}
